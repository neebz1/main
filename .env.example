# ==============================================
# Environment Configuration Template
# ==============================================
# Copy this file to .env and fill in your values
# NEVER commit .env to version control!
#
# For detailed documentation, see:
# - ENVIRONMENT-CONFIGURATION-GUIDE.md (complete setup guide)
# - ENVIRONMENT-VARIABLES-REFERENCE.md (quick reference)
#
# Quick setup:
# 1. cp .env.example .env
# 2. Generate SECRET_KEY: openssl rand -hex 32
# 3. Generate GRADIO_PASSWORD: openssl rand -base64 24
# 4. Add your API keys
# 5. chmod 600 .env

# ==================== CRITICAL SECURITY SETTINGS ====================

# API Secret Key - Generate with: openssl rand -hex 32
# Used for JWT token signing - MUST be unique and secret!
SECRET_KEY=your-secret-key-change-this-in-production-use-openssl-rand-hex-32

# Gradio Authentication (for web interfaces)
# Username for Gradio apps (music AI, mixing engineer, etc.)
GRADIO_USER=admin
# Password for Gradio apps - Generate with: openssl rand -base64 24
GRADIO_PASSWORD=your-password-here

# ==================== API CONFIGURATION ====================

# CORS - Allowed origins (comma-separated, no spaces)
# Development - allows local development servers
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
# Production - Update with your actual domains:
# ALLOWED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com

# Environment mode - affects security settings
# Options: development, staging, production
ENVIRONMENT=development

# ==================== AI API KEYS ====================
# Get your API keys from the respective platforms:

# Together AI (Kimi K2 model, Llama, Mistral)
# Sign up: https://api.together.xyz/settings/api-keys
TOGETHER_API_KEY=your_together_api_key_here

# OpenAI (GPT-4, GPT-3.5-turbo, DALL-E)
# Get key: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic (Claude 3 Opus, Sonnet, Haiku)
# Get key: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google AI (Gemini Pro, Gemini Ultra)
# Get key: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_google_api_key_here

# OpenRouter (Access to 100+ AI models)
# Get key: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# Moonshot AI (Chinese AI provider)
# Get key: https://platform.moonshot.cn/
MOONSHOT_API_KEY=your_moonshot_api_key_here

# Hugging Face (for model hosting/deployment)
# Get token: https://huggingface.co/settings/tokens
HF_TOKEN=your_huggingface_token_here

# GitHub Token (for CLI operations, optional)
# Get token: https://github.com/settings/tokens
# GITHUB_TOKEN=your_github_token_here

# Brave Search API (for web search capabilities, optional)
# Get key: https://brave.com/search/api/
# BRAVE_API_KEY=your_brave_api_key_here

# ==================== DATABASE (OPTIONAL) ====================

# PostgreSQL connection string for production
# Leave empty to use SQLite for development
# Format: postgresql://username:password@host:port/database
# Example: postgresql://myuser:mypass@localhost:5432/myapp
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# ==================== DEPLOYMENT (OPTIONAL) ====================

# Railway deployment token
# Get from: https://railway.app/
# RAILWAY_TOKEN=your_railway_token_here

# Heroku API key
# Get from: https://dashboard.heroku.com/account
# HEROKU_API_KEY=your_heroku_api_key_here

# Vercel deployment token
# Get from: https://vercel.com/account/tokens
# VERCEL_TOKEN=your_vercel_token_here

# ==================== MONITORING (OPTIONAL) ====================

# Sentry DSN for error tracking
# Get from: https://sentry.io/
# SENTRY_DSN=https://...@sentry.io/...

# ==================== EMAIL (OPTIONAL) ====================

# SMTP configuration for email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# ==================== SECURITY NOTES ====================
# 
# 1. Generate SECRET_KEY:
#    openssl rand -hex 32
#
# 2. Generate GRADIO_PASSWORD:
#    openssl rand -base64 24
#
# 3. Store secrets securely:
#    - Use Bitwarden or another password manager
#    - Never share .env files
#    - Use different keys for dev/staging/production
#
# 4. File permissions:
#    chmod 600 .env  (only owner can read/write)
#
# 5. For production:
#    - Use strong, unique SECRET_KEY
#    - Set specific ALLOWED_ORIGINS (not *)
#    - Use PostgreSQL instead of SQLite
#    - Enable HTTPS
#    - Set ENVIRONMENT=production
#    - Set up monitoring and logging
#
# 6. Automated setup:
#    - Use .env-from-bitwarden.sh to generate from Bitwarden
#    - See ENVIRONMENT-CONFIGURATION-GUIDE.md for details
